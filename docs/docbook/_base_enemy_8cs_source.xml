<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__base_enemy_8cs_source" xml:lang="en-US">
<title>BaseEnemy.cs</title>
<indexterm><primary>BaseEnemy.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__base_enemy_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Godot;
<anchor xml:id="__base_enemy_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__base_enemy_8cs_source_1l00003"/>00003 
<anchor xml:id="__base_enemy_8cs_source_1l00007"/><link linkend="_class_base_enemy">00007</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">partial&#32;class&#32;</emphasis><link linkend="_class_base_enemy">BaseEnemy</link>&#32;:&#32;CharacterBody2D
<anchor xml:id="__base_enemy_8cs_source_1l00008"/>00008 {
<anchor xml:id="__base_enemy_8cs_source_1l00009"/>00009 
<anchor xml:id="__base_enemy_8cs_source_1l00010"/><link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">00010</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>&#32;{
<anchor xml:id="__base_enemy_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6ddaa5daf7f2ebbba4975d61dab1c40188c7">IDLE</link>,&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6ddabb2dfc184fa2e91373d3ff304cb01b8a">WALK</link>,&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6ddac6ddd0f72ff2fd344693b9ca8d483871">ATTACK</link>,&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dda905cdcadf3bb9a92f3ae1a6583a1c439">TAKE_HIT</link>
<anchor xml:id="__base_enemy_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00013"/>00013 
<anchor xml:id="__base_enemy_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="comment">//customizable&#32;variables</emphasis>
<anchor xml:id="__base_enemy_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;[Export]
<anchor xml:id="__base_enemy_8cs_source_1l00016"/><link linkend="_class_base_enemy_1a1661cfbf7e6dff6a1d8a6fa44b10a3b0">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_damage">Damage</link>&#32;=&#32;20f;&#32;&#32;&#32;&#32;
<anchor xml:id="__base_enemy_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;[Export]
<anchor xml:id="__base_enemy_8cs_source_1l00018"/><link linkend="_class_base_enemy_1a61314ff2e5931900ca4a87aa8feb670f">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_base_enemy_1a61314ff2e5931900ca4a87aa8feb670f">Dead</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;[Export]
<anchor xml:id="__base_enemy_8cs_source_1l00020"/><link linkend="_class_base_enemy_1a3d261e81ba7422572d0813341016c2c3">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_base_enemy_1a3d261e81ba7422572d0813341016c2c3">Respawnable</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;[Export]
<anchor xml:id="__base_enemy_8cs_source_1l00022"/><link linkend="_class_base_enemy_1aeb1033802e3cdf44b1b0a510cbf18425">00022</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_base_enemy_1aeb1033802e3cdf44b1b0a510cbf18425">MaxHealthPoints</link>&#32;=&#32;100f;
<anchor xml:id="__base_enemy_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;[Export]
<anchor xml:id="__base_enemy_8cs_source_1l00024"/><link linkend="_class_base_enemy_1a66b9b6f8492753769f40e18e66babe6d">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_base_enemy_1a66b9b6f8492753769f40e18e66babe6d">Armor</link>&#32;=&#32;20f;&#32;<emphasis role="comment">//MUSS&#32;ZISCHEN&#32;0&#32;UND&#32;99&#32;LIEGEN</emphasis>
<anchor xml:id="__base_enemy_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;[Export]
<anchor xml:id="__base_enemy_8cs_source_1l00026"/><link linkend="_class_base_enemy_1a4f99809bf5de1dbbe762c13fc7db8881">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_base_enemy_1a4f99809bf5de1dbbe762c13fc7db8881">MaxStamina</link>&#32;=&#32;1f;
<anchor xml:id="__base_enemy_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;[Export]
<anchor xml:id="__base_enemy_8cs_source_1l00028"/><link linkend="_class_base_enemy_1a661de31833c943c7d7d72de616a9141a">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_base_enemy_1a661de31833c943c7d7d72de616a9141a">Speed</link>&#32;=&#32;10;
<anchor xml:id="__base_enemy_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;[Export]
<anchor xml:id="__base_enemy_8cs_source_1l00030"/><link linkend="_class_base_enemy_1afa7426d08cbee4ed3184822c57888ec7">00030</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_base_enemy_1afa7426d08cbee4ed3184822c57888ec7">SinAmount</link>&#32;=&#32;10;
<anchor xml:id="__base_enemy_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;[Export]
<anchor xml:id="__base_enemy_8cs_source_1l00032"/><link linkend="_class_base_enemy_1aba59e1a3fffbf2749c266d8caaf1c482">00032</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_base_enemy_1aba59e1a3fffbf2749c266d8caaf1c482">ReturnToStartAfter</link>&#32;=&#32;5;
<anchor xml:id="__base_enemy_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;[Export(PropertyHint.Flags,&#32;<emphasis role="stringliteral">&quot;1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32&quot;</emphasis>)]
<anchor xml:id="__base_enemy_8cs_source_1l00034"/><link linkend="_class_base_enemy_1a7a4fe2c824142f79ba0dd6cf9d1a7d25">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;uint&#32;<link linkend="_class_base_enemy_1a7a4fe2c824142f79ba0dd6cf9d1a7d25">Id</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;}&#32;=&#32;0;
<anchor xml:id="__base_enemy_8cs_source_1l00035"/>00035 
<anchor xml:id="__base_enemy_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="comment">//private&#32;variables</emphasis>
<anchor xml:id="__base_enemy_8cs_source_1l00037"/><link linkend="_class_base_enemy_1ad8681385a9f3e9e67d65acb6b945efcf">00037</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_base_enemy_1ad8681385a9f3e9e67d65acb6b945efcf">CurrentHealthPoints</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00038"/><link linkend="_class_base_enemy_1a8a041329b7418ab3fb1b92aa0674eaa8">00038</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_base_enemy_1a8a041329b7418ab3fb1b92aa0674eaa8">CurrentStamina</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00039"/><link linkend="_class_base_enemy_1a283d342796ff720966538c0776fc9e48">00039</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_base_enemy_1a283d342796ff720966538c0776fc9e48">ReturnToStart</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00040"/><link linkend="_class_base_enemy_1a512fca9892d7e4cd717adf9087dcc295">00040</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_base_enemy_1a512fca9892d7e4cd717adf9087dcc295">Pursuing</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00041"/><link linkend="_class_base_enemy_1aaeef5b40160a59096f667fd084b73cc8">00041</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Node2D&#32;<link linkend="_class_base_enemy_1aaeef5b40160a59096f667fd084b73cc8">CurrentTarget</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00042"/><link linkend="_class_base_enemy_1a2b05c8247dab9946e801fd74a8af6376">00042</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector2&#32;<link linkend="_class_base_enemy_1a2b05c8247dab9946e801fd74a8af6376">TargetPosition</link>&#32;=&#32;Vector2.Inf;
<anchor xml:id="__base_enemy_8cs_source_1l00043"/><link linkend="_class_base_enemy_1af386b85762b6790503bf1716a9d2fd77">00043</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector2&#32;<link linkend="_class_base_enemy_1af386b85762b6790503bf1716a9d2fd77">StartPosition</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00044"/><link linkend="_class_base_enemy_1ad2523c398e4a11b5f36a9df26c4014eb">00044</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_base_enemy_1ad2523c398e4a11b5f36a9df26c4014eb">StartRotation</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00045"/><link linkend="_class_base_enemy_1a47be49c6e16a1f99ee1ed68549b31d05">00045</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>&#32;<link linkend="_class_base_enemy_1a47be49c6e16a1f99ee1ed68549b31d05">AnimationState</link>&#32;=&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>.IDLE;
<anchor xml:id="__base_enemy_8cs_source_1l00046"/><link linkend="_class_base_enemy_1a47e5e613c39180e6b1bf9899039b45fc">00046</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_base_enemy_1a47e5e613c39180e6b1bf9899039b45fc">AlreadyHit</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00047"/>00047 
<anchor xml:id="__base_enemy_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="comment">//linked&#32;nodes</emphasis>
<anchor xml:id="__base_enemy_8cs_source_1l00049"/><link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">00049</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;AnimatedSprite2D&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00050"/><link linkend="_class_base_enemy_1ada18d6dd378a0f7380579ce63a6b4ec2">00050</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;CollisionPolygon2D&#32;<link linkend="_class_base_enemy_1ada18d6dd378a0f7380579ce63a6b4ec2">CollisionPolygon</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00051"/><link linkend="_class_base_enemy_1a9d136e8abbf09f7b418112394bdf1c88">00051</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Area2D&#32;<link linkend="_class_base_enemy_1a9d136e8abbf09f7b418112394bdf1c88">SwordHitbox</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00052"/><link linkend="_class_base_enemy_1a9b71f0d7b10ec2b15f5176b8b69ce190">00052</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;CollisionShape2D&#32;<link linkend="_class_base_enemy_1a9b71f0d7b10ec2b15f5176b8b69ce190">MainCollision</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00053"/><link linkend="_class_base_enemy_1a136d1835e3ccedebaa12d7fe151d890b">00053</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;RayCast2D&#32;<link linkend="_class_base_enemy_1a136d1835e3ccedebaa12d7fe151d890b">FrontCollisionRayCast</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00054"/><link linkend="_class_base_enemy_1a586349c436eb91c16f5f2f4bee17caa1">00054</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;RayCast2D&#32;<link linkend="_class_base_enemy_1a586349c436eb91c16f5f2f4bee17caa1">LineOfSight</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00055"/><link linkend="_class_base_enemy_1a4b844f94d42f547d733385fcefc5473a">00055</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;RayCast2D&#32;<link linkend="_class_base_enemy_1a4b844f94d42f547d733385fcefc5473a">LeftFallProtection</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00056"/><link linkend="_class_base_enemy_1a250a47e4f491f15dc19e64816bef01d7">00056</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;RayCast2D&#32;<link linkend="_class_base_enemy_1a250a47e4f491f15dc19e64816bef01d7">RightFallProtection</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00057"/><link linkend="_class_base_enemy_1a5944a26db58d24ee828a2d8e83687e93">00057</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;TextureProgressBar&#32;<link linkend="_class_base_enemy_1a5944a26db58d24ee828a2d8e83687e93">HealthBar</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00058"/><link linkend="_class_base_enemy_1a968a793842be49b5cf65fa35deb9ae5c">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<link linkend="_class_player">Player</link>&#32;<link linkend="_class_base_enemy_1a968a793842be49b5cf65fa35deb9ae5c">Player</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00059"/>00059 
<anchor xml:id="__base_enemy_8cs_source_1l00064"/><link linkend="_class_base_enemy_1a39d037e06e1fcb609e5108431e931acd">00064</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1a39d037e06e1fcb609e5108431e931acd">_Ready</link>()
<anchor xml:id="__base_enemy_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;{
<anchor xml:id="__base_enemy_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>&#32;=&#32;GetNode&lt;AnimatedSprite2D&gt;(<emphasis role="stringliteral">&quot;AnimatedSprite2D&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1ada18d6dd378a0f7380579ce63a6b4ec2">CollisionPolygon</link>&#32;=&#32;GetNode&lt;CollisionPolygon2D&gt;(<emphasis role="stringliteral">&quot;detection/CollisionPolygon2D&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a9d136e8abbf09f7b418112394bdf1c88">SwordHitbox</link>&#32;=&#32;GetNode&lt;Area2D&gt;(<emphasis role="stringliteral">&quot;AnimatedSprite2D/SwordHitBox&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a9b71f0d7b10ec2b15f5176b8b69ce190">MainCollision</link>&#32;=&#32;GetNode&lt;CollisionShape2D&gt;(<emphasis role="stringliteral">&quot;MainCollision&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a136d1835e3ccedebaa12d7fe151d890b">FrontCollisionRayCast</link>&#32;=&#32;GetNode&lt;RayCast2D&gt;(<emphasis role="stringliteral">&quot;FrontCollisionRayCast&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a586349c436eb91c16f5f2f4bee17caa1">LineOfSight</link>&#32;=&#32;GetNode&lt;RayCast2D&gt;(<emphasis role="stringliteral">&quot;LineOfSight&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a4b844f94d42f547d733385fcefc5473a">LeftFallProtection</link>&#32;=&#32;GetNode&lt;RayCast2D&gt;(<emphasis role="stringliteral">&quot;LeftFallProtection&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a250a47e4f491f15dc19e64816bef01d7">RightFallProtection</link>&#32;=&#32;GetNode&lt;RayCast2D&gt;(<emphasis role="stringliteral">&quot;RightFallProtection&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_health_bar">HealthBar</link>&#32;=&#32;GetNode&lt;TextureProgressBar&gt;(<emphasis role="stringliteral">&quot;HealthBar&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player">Player</link>&#32;=&#32;GetNode&lt;Player&gt;(<emphasis role="stringliteral">&quot;../../Player&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00076"/>00076 
<anchor xml:id="__base_enemy_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1ad8681385a9f3e9e67d65acb6b945efcf">CurrentHealthPoints</link>&#32;=&#32;<link linkend="_class_base_enemy_1aeb1033802e3cdf44b1b0a510cbf18425">MaxHealthPoints</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a8a041329b7418ab3fb1b92aa0674eaa8">CurrentStamina</link>&#32;=&#32;<link linkend="_class_base_enemy_1a4f99809bf5de1dbbe762c13fc7db8881">MaxStamina</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a283d342796ff720966538c0776fc9e48">ReturnToStart</link>&#32;=&#32;<link linkend="_class_base_enemy_1aba59e1a3fffbf2749c266d8caaf1c482">ReturnToStartAfter</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1af386b85762b6790503bf1716a9d2fd77">StartPosition</link>&#32;=&#32;Position;
<anchor xml:id="__base_enemy_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1ad2523c398e4a11b5f36a9df26c4014eb">StartRotation</link>&#32;=&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.FlipH;
<anchor xml:id="__base_enemy_8cs_source_1l00082"/>00082 
<anchor xml:id="__base_enemy_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HealthBar.Value&#32;=&#32;100f*&#32;<link linkend="_class_base_enemy_1ad8681385a9f3e9e67d65acb6b945efcf">CurrentHealthPoints</link>/<link linkend="_class_base_enemy_1aeb1033802e3cdf44b1b0a510cbf18425">MaxHealthPoints</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00085"/>00085 
<anchor xml:id="__base_enemy_8cs_source_1l00091"/><link linkend="_class_base_enemy_1acf42e9e6b9a386259f5dd74a83c09fac">00091</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1acf42e9e6b9a386259f5dd74a83c09fac">_Process</link>(<emphasis role="keywordtype">double</emphasis>&#32;DeltaTime)
<anchor xml:id="__base_enemy_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;{
<anchor xml:id="__base_enemy_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1aee39d90b4efaebada5ab47b21184516a">HandleMovement</link>(DeltaTime);
<anchor xml:id="__base_enemy_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a8a041329b7418ab3fb1b92aa0674eaa8">CurrentStamina</link>&#32;&lt;&#32;<link linkend="_class_base_enemy_1a4f99809bf5de1dbbe762c13fc7db8881">MaxStamina</link>){
<anchor xml:id="__base_enemy_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a8a041329b7418ab3fb1b92aa0674eaa8">CurrentStamina</link>&#32;+=&#32;(float)&#32;DeltaTime;
<anchor xml:id="__base_enemy_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;Velocity&#32;*&#32;0.8f;
<anchor xml:id="__base_enemy_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!IsOnFloor()&#32;&amp;&amp;&#32;!<link linkend="_class_base_enemy_1a61314ff2e5931900ca4a87aa8feb670f">Dead</link>)&#32;{
<anchor xml:id="__base_enemy_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;+=&#32;GetGravity()&#32;*&#32;(float)DeltaTime;
<anchor xml:id="__base_enemy_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a52b8c24a84bfa2e981d776f816f33186">UpdateAnimation</link>();
<anchor xml:id="__base_enemy_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MoveAndSlide();
<anchor xml:id="__base_enemy_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a0a7f33bd3971e202eee9d43e63180500">CheckPlayerHit</link>();
<anchor xml:id="__base_enemy_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00105"/>00105 
<anchor xml:id="__base_enemy_8cs_source_1l00110"/><link linkend="_class_base_enemy_1ad1a2b4f2e07d55eab26d4d8e1d9aa713">00110</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1ad1a2b4f2e07d55eab26d4d8e1d9aa713">OnDetectionBodyEntered</link>(Node2D&#32;body){
<anchor xml:id="__base_enemy_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a59a907194c4c712b41719a6fc12c1583">CheckLineOfSight</link>(body)){
<anchor xml:id="__base_enemy_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a512fca9892d7e4cd717adf9087dcc295">Pursuing</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1aaeef5b40160a59096f667fd084b73cc8">CurrentTarget</link>&#32;=&#32;body;
<anchor xml:id="__base_enemy_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00116"/>00116 
<anchor xml:id="__base_enemy_8cs_source_1l00121"/><link linkend="_class_base_enemy_1a269f9f3626f17368f404ca27616d0697">00121</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1a269f9f3626f17368f404ca27616d0697">OnPursuingRadiusBodyExited</link>(Node2D&#32;body){
<anchor xml:id="__base_enemy_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(body&#32;==&#32;<link linkend="_class_base_enemy_1aaeef5b40160a59096f667fd084b73cc8">CurrentTarget</link>){
<anchor xml:id="__base_enemy_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a512fca9892d7e4cd717adf9087dcc295">Pursuing</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1aaeef5b40160a59096f667fd084b73cc8">CurrentTarget</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00127"/>00127 
<anchor xml:id="__base_enemy_8cs_source_1l00132"/><link linkend="_class_base_enemy_1a6aad96826441fe152694139d29893bad">00132</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1a6aad96826441fe152694139d29893bad">OnHitboxAreaEntered</link>(Area2D&#32;area){
<anchor xml:id="__base_enemy_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player">Player</link>&#32;Player1&#32;=&#32;(<link linkend="_class_base_enemy_1a968a793842be49b5cf65fa35deb9ae5c">Player</link>)&#32;area.GetParent().GetParent();
<anchor xml:id="__base_enemy_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a284a995d12d6bc1d7a23d1f6f25a96af">TakeDamage</link>(Player1.<link linkend="_class_player_1a01ad03754c12b1288b69cdd42cb6f85e">GetDamage</link>());
<anchor xml:id="__base_enemy_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00136"/>00136 
<anchor xml:id="__base_enemy_8cs_source_1l00141"/><link linkend="_class_base_enemy_1ab07fb117d5286ef97dc702149c02b14a">00141</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1ab07fb117d5286ef97dc702149c02b14a">OnSwordHitBoxBodyEntered</link>(Node2D&#32;body){
<anchor xml:id="__base_enemy_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a61314ff2e5931900ca4a87aa8feb670f">Dead</link>)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Play(<emphasis role="stringliteral">&quot;attack&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00145"/>00145 
<anchor xml:id="__base_enemy_8cs_source_1l00150"/><link linkend="_class_base_enemy_1aee39d90b4efaebada5ab47b21184516a">00150</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1aee39d90b4efaebada5ab47b21184516a">HandleMovement</link>(<emphasis role="keywordtype">double</emphasis>&#32;DeltaTime){
<anchor xml:id="__base_enemy_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a61314ff2e5931900ca4a87aa8feb670f">Dead</link>)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Animation&#32;==&#32;<emphasis role="stringliteral">&quot;take_hit&quot;</emphasis>&#32;||&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Animation&#32;==&#32;<emphasis role="stringliteral">&quot;attack&quot;</emphasis>)&#32;&amp;&amp;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.IsPlaying()){
<anchor xml:id="__base_enemy_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;Vector2.Zero;
<anchor xml:id="__base_enemy_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a512fca9892d7e4cd717adf9087dcc295">Pursuing</link>){
<anchor xml:id="__base_enemy_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a47be49c6e16a1f99ee1ed68549b31d05">AnimationState</link>&#32;=&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>.WALK;
<anchor xml:id="__base_enemy_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2b05c8247dab9946e801fd74a8af6376">TargetPosition</link>&#32;=&#32;<link linkend="_class_base_enemy_1aaeef5b40160a59096f667fd084b73cc8">CurrentTarget</link>.Position;
<anchor xml:id="__base_enemy_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1abf57b8dbd0f267fd42a2a02b7bda95dc">IsCloseTo</link>(Position.X,&#32;<link linkend="_class_base_enemy_1a2b05c8247dab9946e801fd74a8af6376">TargetPosition</link>.X,&#32;0.1f)){
<anchor xml:id="__base_enemy_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a47be49c6e16a1f99ee1ed68549b31d05">AnimationState</link>&#32;=&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>.IDLE;
<anchor xml:id="__base_enemy_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;Vector2.Zero;
<anchor xml:id="__base_enemy_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a283d342796ff720966538c0776fc9e48">ReturnToStart</link>&#32;=&#32;<link linkend="_class_base_enemy_1aba59e1a3fffbf2749c266d8caaf1c482">ReturnToStartAfter</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a283d342796ff720966538c0776fc9e48">ReturnToStart</link>&#32;&gt;=&#32;0){
<anchor xml:id="__base_enemy_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a47be49c6e16a1f99ee1ed68549b31d05">AnimationState</link>&#32;=&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>.IDLE;
<anchor xml:id="__base_enemy_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a283d342796ff720966538c0776fc9e48">ReturnToStart</link>&#32;-=&#32;DeltaTime;
<anchor xml:id="__base_enemy_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2b05c8247dab9946e801fd74a8af6376">TargetPosition</link>&#32;=&#32;Vector2.Inf;
<anchor xml:id="__base_enemy_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_base_enemy_1abf57b8dbd0f267fd42a2a02b7bda95dc">IsCloseTo</link>(Position.X,&#32;<link linkend="_class_base_enemy_1af386b85762b6790503bf1716a9d2fd77">StartPosition</link>.X,&#32;0.1f)){
<anchor xml:id="__base_enemy_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a47be49c6e16a1f99ee1ed68549b31d05">AnimationState</link>&#32;=&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>.WALK;
<anchor xml:id="__base_enemy_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2b05c8247dab9946e801fd74a8af6376">TargetPosition</link>&#32;=&#32;<link linkend="_class_base_enemy_1af386b85762b6790503bf1716a9d2fd77">StartPosition</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00173"/>00173 
<anchor xml:id="__base_enemy_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a2b05c8247dab9946e801fd74a8af6376">TargetPosition</link>&#32;!=&#32;Vector2.Inf){
<anchor xml:id="__base_enemy_8cs_source_1l00175"/>00175 
<anchor xml:id="__base_enemy_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1abf57b8dbd0f267fd42a2a02b7bda95dc">IsCloseTo</link>(Position.X,&#32;<link linkend="_class_base_enemy_1a2b05c8247dab9946e801fd74a8af6376">TargetPosition</link>.X,&#32;0.1f)){
<anchor xml:id="__base_enemy_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a47be49c6e16a1f99ee1ed68549b31d05">AnimationState</link>&#32;=&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>.IDLE;
<anchor xml:id="__base_enemy_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;Vector2.Zero;
<anchor xml:id="__base_enemy_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a2b05c8247dab9946e801fd74a8af6376">TargetPosition</link>&#32;==&#32;<link linkend="_class_base_enemy_1af386b85762b6790503bf1716a9d2fd77">StartPosition</link>&#32;&amp;&amp;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.FlipH&#32;!=&#32;<link linkend="_class_base_enemy_1ad2523c398e4a11b5f36a9df26c4014eb">StartRotation</link>){
<anchor xml:id="__base_enemy_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1aa9ade96897c57dfc0b6b69e7d0996076">FlipRotation</link>();
<anchor xml:id="__base_enemy_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2b05c8247dab9946e801fd74a8af6376">TargetPosition</link>&#32;=&#32;Vector2.Inf;
<anchor xml:id="__base_enemy_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00185"/>00185 
<anchor xml:id="__base_enemy_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a2b05c8247dab9946e801fd74a8af6376">TargetPosition</link>.X&#32;&gt;&#32;Position.X){
<anchor xml:id="__base_enemy_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1aebc2a569b2f2f3d35870e9aabb943069">SetRotation</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_base_enemy_1a136d1835e3ccedebaa12d7fe151d890b">FrontCollisionRayCast</link>.IsColliding()){
<anchor xml:id="__base_enemy_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;velocity&#32;=&#32;Vector2.Zero;
<anchor xml:id="__base_enemy_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;velocity.X&#32;=&#32;<link linkend="_class_base_enemy_1a661de31833c943c7d7d72de616a9141a">Speed</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;velocity;
<anchor xml:id="__base_enemy_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__base_enemy_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1aebc2a569b2f2f3d35870e9aabb943069">SetRotation</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_base_enemy_1a136d1835e3ccedebaa12d7fe151d890b">FrontCollisionRayCast</link>.IsColliding()){
<anchor xml:id="__base_enemy_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;velocity&#32;=&#32;Vector2.Zero;
<anchor xml:id="__base_enemy_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;velocity.X&#32;=&#32;-<link linkend="_class_base_enemy_1a661de31833c943c7d7d72de616a9141a">Speed</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;velocity;
<anchor xml:id="__base_enemy_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00201"/>00201 
<anchor xml:id="__base_enemy_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((!<link linkend="_class_base_enemy_1a250a47e4f491f15dc19e64816bef01d7">RightFallProtection</link>.IsColliding()&#32;&amp;&amp;&#32;!<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.FlipH)&#32;||&#32;(!<link linkend="_class_base_enemy_1a4b844f94d42f547d733385fcefc5473a">LeftFallProtection</link>.IsColliding()&#32;&amp;&amp;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.FlipH)){
<anchor xml:id="__base_enemy_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;Vector2.Zero;
<anchor xml:id="__base_enemy_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00205"/>00205 
<anchor xml:id="__base_enemy_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__base_enemy_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;Vector2.Zero;
<anchor xml:id="__base_enemy_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a47be49c6e16a1f99ee1ed68549b31d05">AnimationState</link>&#32;=&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>.IDLE;
<anchor xml:id="__base_enemy_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00211"/>00211 
<anchor xml:id="__base_enemy_8cs_source_1l00212"/>00212 
<anchor xml:id="__base_enemy_8cs_source_1l00216"/><link linkend="_class_base_enemy_1a52b8c24a84bfa2e981d776f816f33186">00216</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1a52b8c24a84bfa2e981d776f816f33186">UpdateAnimation</link>(){
<anchor xml:id="__base_enemy_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a61314ff2e5931900ca4a87aa8feb670f">Dead</link>)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!((<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Animation&#32;==&#32;<emphasis role="stringliteral">&quot;take_hit&quot;</emphasis>&#32;||&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Animation&#32;==&#32;<emphasis role="stringliteral">&quot;attack&quot;</emphasis>)&#32;&amp;&amp;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.IsPlaying())){
<anchor xml:id="__base_enemy_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(<link linkend="_class_base_enemy_1a47be49c6e16a1f99ee1ed68549b31d05">AnimationState</link>){
<anchor xml:id="__base_enemy_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>.IDLE:&#32;
<anchor xml:id="__base_enemy_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Play(<emphasis role="stringliteral">&quot;idle&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__base_enemy_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>.WALK:
<anchor xml:id="__base_enemy_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Play(<emphasis role="stringliteral">&quot;walk&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__base_enemy_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>.ATTACK:
<anchor xml:id="__base_enemy_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Play(<emphasis role="stringliteral">&quot;attack&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__base_enemy_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_base_enemy_1ac529914117dfe8158325b43be1f1c6dd">State</link>.TAKE_HIT:
<anchor xml:id="__base_enemy_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Play(<emphasis role="stringliteral">&quot;take_hit&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HealthBar.Value&#32;=&#32;100f*&#32;<link linkend="_class_base_enemy_1ad8681385a9f3e9e67d65acb6b945efcf">CurrentHealthPoints</link>/<link linkend="_class_base_enemy_1aeb1033802e3cdf44b1b0a510cbf18425">MaxHealthPoints</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00238"/>00238 
<anchor xml:id="__base_enemy_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00240"/>00240 
<anchor xml:id="__base_enemy_8cs_source_1l00245"/><link linkend="_class_base_enemy_1a284a995d12d6bc1d7a23d1f6f25a96af">00245</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1a284a995d12d6bc1d7a23d1f6f25a96af">TakeDamage</link>(<link linkend="_class_damage">Damage</link>&#32;DMG){
<anchor xml:id="__base_enemy_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a61314ff2e5931900ca4a87aa8feb670f">Dead</link>)&#32;{
<anchor xml:id="__base_enemy_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1ad8681385a9f3e9e67d65acb6b945efcf">CurrentHealthPoints</link>&#32;-=&#32;DMG.<link linkend="_class_damage_1a084fad418a6be9edca3e3e32355e49c0">GetPhysicalDMG</link>()&#32;*&#32;(1&#32;-&#32;<link linkend="_class_base_enemy_1a66b9b6f8492753769f40e18e66babe6d">Armor</link>&#32;/&#32;100.0f)&#32;+&#32;DMG.<link linkend="_class_damage_1a4d43580112f089c208f9ba8e0b2559f0">GetTrueDMG</link>();
<anchor xml:id="__base_enemy_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Position&#32;+=&#32;DMG.<link linkend="_class_damage_1a60741a1e632c21788499ddc284b2844b">GetPushAmount</link>();
<anchor xml:id="__base_enemy_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1ad8681385a9f3e9e67d65acb6b945efcf">CurrentHealthPoints</link>&#32;&lt;=&#32;0){
<anchor xml:id="__base_enemy_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1aa5e7d87eaa080ed685315588a39a9f1f">Die</link>();
<anchor xml:id="__base_enemy_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__base_enemy_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Play(<emphasis role="stringliteral">&quot;take_hit&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(DMG.<link linkend="_class_damage_1ac446ed14eae2ee0d927510a3ab525042">GetSource</link>()&#32;==&#32;<link linkend="_class_player">Player</link>){
<anchor xml:id="__base_enemy_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a512fca9892d7e4cd717adf9087dcc295">Pursuing</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1aaeef5b40160a59096f667fd084b73cc8">CurrentTarget</link>&#32;=&#32;<link linkend="_class_base_enemy_1a968a793842be49b5cf65fa35deb9ae5c">Player</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00261"/>00261 
<anchor xml:id="__base_enemy_8cs_source_1l00266"/><link linkend="_class_base_enemy_1a27c3947769522b35b537e5f472ef0b77">00266</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_base_enemy_1a27c3947769522b35b537e5f472ef0b77">IsDead</link>(){
<anchor xml:id="__base_enemy_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_base_enemy_1a61314ff2e5931900ca4a87aa8feb670f">Dead</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00269"/>00269 
<anchor xml:id="__base_enemy_8cs_source_1l00274"/><link linkend="_class_base_enemy_1a0a7f33bd3971e202eee9d43e63180500">00274</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1a0a7f33bd3971e202eee9d43e63180500">CheckPlayerHit</link>(){
<anchor xml:id="__base_enemy_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a61314ff2e5931900ca4a87aa8feb670f">Dead</link>)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Animation&#32;!=&#32;<emphasis role="stringliteral">&quot;attack&quot;</emphasis>){
<anchor xml:id="__base_enemy_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a47e5e613c39180e6b1bf9899039b45fc">AlreadyHit</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Animation&#32;==&#32;<emphasis role="stringliteral">&quot;take_hit&quot;</emphasis>&#32;||&#32;<link linkend="_class_base_enemy_1a8a041329b7418ab3fb1b92aa0674eaa8">CurrentStamina</link>&#32;&lt;&#32;<link linkend="_class_base_enemy_1a4f99809bf5de1dbbe762c13fc7db8881">MaxStamina</link>)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Godot.Collections.Array&lt;Node2D&gt;&#32;Bodies&#32;=&#32;<link linkend="_class_base_enemy_1a9d136e8abbf09f7b418112394bdf1c88">SwordHitbox</link>.GetOverlappingBodies();
<anchor xml:id="__base_enemy_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>(Node2D&#32;Body&#32;<emphasis role="keywordflow">in</emphasis>&#32;Bodies){
<anchor xml:id="__base_enemy_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(Body&#32;==&#32;<link linkend="_class_player">Player</link>){
<anchor xml:id="__base_enemy_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Play(<emphasis role="stringliteral">&quot;attack&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a47e5e613c39180e6b1bf9899039b45fc">AlreadyHit</link>)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Frame&#32;&gt;=&#32;6){
<anchor xml:id="__base_enemy_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a8a041329b7418ab3fb1b92aa0674eaa8">CurrentStamina</link>&#32;=&#32;0;
<anchor xml:id="__base_enemy_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Godot.Collections.Array&lt;Node2D&gt;&#32;Bodies&#32;=&#32;<link linkend="_class_base_enemy_1a9d136e8abbf09f7b418112394bdf1c88">SwordHitbox</link>.GetOverlappingBodies();
<anchor xml:id="__base_enemy_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>(Node2D&#32;Body&#32;<emphasis role="keywordflow">in</emphasis>&#32;Bodies){
<anchor xml:id="__base_enemy_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(Body&#32;==&#32;<link linkend="_class_player">Player</link>){
<anchor xml:id="__base_enemy_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player">Player</link>.<link linkend="_class_player_1aa1a0addae97cec09d2e86f3060a05438">TakeDamage</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_base_enemy_1a1661cfbf7e6dff6a1d8a6fa44b10a3b0">Damage</link>(<link linkend="_class_damage">Damage</link>,&#32;0f,&#32;Vector2.Zero,&#32;<emphasis role="keyword">this</emphasis>));
<anchor xml:id="__base_enemy_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a47e5e613c39180e6b1bf9899039b45fc">AlreadyHit</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00299"/>00299 
<anchor xml:id="__base_enemy_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00301"/>00301 
<anchor xml:id="__base_enemy_8cs_source_1l00305"/><link linkend="_class_base_enemy_1aa5e7d87eaa080ed685315588a39a9f1f">00305</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1aa5e7d87eaa080ed685315588a39a9f1f">Die</link>(){
<anchor xml:id="__base_enemy_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a61314ff2e5931900ca4a87aa8feb670f">Dead</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;Vector2.Zero;
<anchor xml:id="__base_enemy_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a9b71f0d7b10ec2b15f5176b8b69ce190">MainCollision</link>.SetDeferred(CollisionShape2D.PropertyName.Disabled,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00309"/>00309 
<anchor xml:id="__base_enemy_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Play(<emphasis role="stringliteral">&quot;death&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_health_bar">HealthBar</link>.SetVisible(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player">Player</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__base_enemy_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player">Player</link>.<link linkend="_class_player_1aa718b6dab81ebd60b8b910ad8c7adff6">SetSinAmount</link>(<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1a0b2b3398a02e8fbafe3c41dd466c57d0">GetSinAmount</link>()&#32;+&#32;<link linkend="_class_base_enemy_1afa7426d08cbee4ed3184822c57888ec7">SinAmount</link>);&#32;
<anchor xml:id="__base_enemy_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00315"/>00315 
<anchor xml:id="__base_enemy_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00317"/>00317 
<anchor xml:id="__base_enemy_8cs_source_1l00321"/><link linkend="_class_base_enemy_1a9ef92c3f73170538681e665e78e2279a">00321</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1a9ef92c3f73170538681e665e78e2279a">Respawn</link>()
<anchor xml:id="__base_enemy_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;{
<anchor xml:id="__base_enemy_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a61314ff2e5931900ca4a87aa8feb670f">Dead</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1ad8681385a9f3e9e67d65acb6b945efcf">CurrentHealthPoints</link>&#32;=&#32;<link linkend="_class_base_enemy_1aeb1033802e3cdf44b1b0a510cbf18425">MaxHealthPoints</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HealthBar.Value&#32;=&#32;100f&#32;*&#32;<link linkend="_class_base_enemy_1ad8681385a9f3e9e67d65acb6b945efcf">CurrentHealthPoints</link>&#32;/&#32;<link linkend="_class_base_enemy_1aeb1033802e3cdf44b1b0a510cbf18425">MaxHealthPoints</link>;
<anchor xml:id="__base_enemy_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a9b71f0d7b10ec2b15f5176b8b69ce190">MainCollision</link>.SetDeferred(CollisionShape2D.PropertyName.Disabled,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_health_bar">HealthBar</link>.SetVisible(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.Play(<emphasis role="stringliteral">&quot;idle&quot;</emphasis>);
<anchor xml:id="__base_enemy_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00330"/>00330 
<anchor xml:id="__base_enemy_8cs_source_1l00336"/><link linkend="_class_base_enemy_1a59a907194c4c712b41719a6fc12c1583">00336</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_base_enemy_1a59a907194c4c712b41719a6fc12c1583">CheckLineOfSight</link>(Node2D&#32;body){
<anchor xml:id="__base_enemy_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;offset&#32;=&#32;Vector2.Zero;
<anchor xml:id="__base_enemy_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset.Y&#32;=&#32;-14;
<anchor xml:id="__base_enemy_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LineOfSight.TargetPosition&#32;=&#32;body.Position&#32;+&#32;offset&#32;-&#32;(Position&#32;+&#32;<link linkend="_class_base_enemy_1a586349c436eb91c16f5f2f4bee17caa1">LineOfSight</link>.Position);
<anchor xml:id="__base_enemy_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_base_enemy_1a586349c436eb91c16f5f2f4bee17caa1">LineOfSight</link>.IsColliding()){
<anchor xml:id="__base_enemy_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_base_enemy_1a586349c436eb91c16f5f2f4bee17caa1">LineOfSight</link>.GetCollider()&#32;==&#32;body;
<anchor xml:id="__base_enemy_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__base_enemy_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00345"/>00345 
<anchor xml:id="__base_enemy_8cs_source_1l00349"/><link linkend="_class_base_enemy_1aa9ade96897c57dfc0b6b69e7d0996076">00349</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1aa9ade96897c57dfc0b6b69e7d0996076">FlipRotation</link>(){
<anchor xml:id="__base_enemy_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sprite.FlipH&#32;=&#32;!<link linkend="_class_base_enemy_1a2e4bd99e594a6c3366f64ab47c7443b5">Sprite</link>.FlipH;
<anchor xml:id="__base_enemy_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CollisionPolygon.RotationDegrees&#32;=&#32;Math.Abs(<link linkend="_class_base_enemy_1ada18d6dd378a0f7380579ce63a6b4ec2">CollisionPolygon</link>.RotationDegrees&#32;-180);
<anchor xml:id="__base_enemy_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SwordHitbox.RotationDegrees&#32;=&#32;Math.Abs(<link linkend="_class_base_enemy_1a9d136e8abbf09f7b418112394bdf1c88">SwordHitbox</link>.RotationDegrees&#32;-180);
<anchor xml:id="__base_enemy_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FrontCollisionRayCast.RotationDegrees&#32;=&#32;Math.Abs(<link linkend="_class_base_enemy_1a136d1835e3ccedebaa12d7fe151d890b">FrontCollisionRayCast</link>.RotationDegrees&#32;-&#32;180);
<anchor xml:id="__base_enemy_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00355"/>00355 
<anchor xml:id="__base_enemy_8cs_source_1l00360"/><link linkend="_class_base_enemy_1aebc2a569b2f2f3d35870e9aabb943069">00360</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_base_enemy_1aebc2a569b2f2f3d35870e9aabb943069">SetRotation</link>(<emphasis role="keywordtype">bool</emphasis>&#32;Rotation){
<anchor xml:id="__base_enemy_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sprite.FlipH&#32;=&#32;Rotation&#32;^&#32;<link linkend="_class_base_enemy_1ad2523c398e4a11b5f36a9df26c4014eb">StartRotation</link>;&#32;<emphasis role="comment">//&#32;XOR&#32;mit&#32;StartRotation</emphasis>
<anchor xml:id="__base_enemy_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(Rotation){
<anchor xml:id="__base_enemy_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CollisionPolygon.RotationDegrees&#32;=&#32;180;
<anchor xml:id="__base_enemy_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SwordHitbox.RotationDegrees&#32;=&#32;180;
<anchor xml:id="__base_enemy_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FrontCollisionRayCast.RotationDegrees&#32;=&#32;180;
<anchor xml:id="__base_enemy_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__base_enemy_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CollisionPolygon.RotationDegrees&#32;=&#32;0;
<anchor xml:id="__base_enemy_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SwordHitbox.RotationDegrees&#32;=&#32;0;
<anchor xml:id="__base_enemy_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FrontCollisionRayCast.RotationDegrees&#32;=&#32;0;
<anchor xml:id="__base_enemy_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00372"/>00372 
<anchor xml:id="__base_enemy_8cs_source_1l00380"/><link linkend="_class_base_enemy_1abf57b8dbd0f267fd42a2a02b7bda95dc">00380</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_base_enemy_1abf57b8dbd0f267fd42a2a02b7bda95dc">IsCloseTo</link>(<emphasis role="keywordtype">float</emphasis>&#32;Value1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;Value2,&#32;<emphasis role="keywordtype">float</emphasis>&#32;Delta){
<anchor xml:id="__base_enemy_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Value1&#32;&lt;=&#32;(Value2&#32;+&#32;Delta)&#32;&amp;&amp;&#32;Value1&#32;&gt;=&#32;(Value2&#32;-&#32;Delta);
<anchor xml:id="__base_enemy_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;}
<anchor xml:id="__base_enemy_8cs_source_1l00383"/>00383 }
</programlisting></section>
