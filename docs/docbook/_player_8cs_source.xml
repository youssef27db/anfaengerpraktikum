<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__player_8cs_source" xml:lang="en-US">
<title>Player.cs</title>
<indexterm><primary>Player.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__player_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Godot;
<anchor xml:id="__player_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System;
<anchor xml:id="__player_8cs_source_1l00003"/>00003 
<anchor xml:id="__player_8cs_source_1l00008"/><link linkend="_class_player">00008</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">partial&#32;class&#32;</emphasis><link linkend="_class_player">Player</link>&#32;:&#32;CharacterBody2D
<anchor xml:id="__player_8cs_source_1l00009"/>00009 {
<anchor xml:id="__player_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Variablen&#32;für&#32;Bewegung,&#32;Sprünge&#32;und&#32;Dash</emphasis>
<anchor xml:id="__player_8cs_source_1l00011"/><link linkend="_class_player_1a23e57f8d9bfe69ab49b86a94bcc8c37d">00011</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_player_1a23e57f8d9bfe69ab49b86a94bcc8c37d">SPEED</link>&#32;=&#32;100f;
<anchor xml:id="__player_8cs_source_1l00012"/><link linkend="_class_player_1a8da3506a415217b5eeacbf254620b0a1">00012</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_player_1a8da3506a415217b5eeacbf254620b0a1">JUMP_VELOCITY</link>&#32;=&#32;-300f;
<anchor xml:id="__player_8cs_source_1l00013"/><link linkend="_class_player_1a7bcbe69f9f5e347cf485306520b1dadd">00013</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_player_1a7bcbe69f9f5e347cf485306520b1dadd">JumpMax</link>&#32;=&#32;2;
<anchor xml:id="__player_8cs_source_1l00014"/><link linkend="_class_player_1a9c16b607216c433cd53e2a56fedfeeed">00014</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_player_1a9c16b607216c433cd53e2a56fedfeeed">JumpCount</link>&#32;=&#32;0;
<anchor xml:id="__player_8cs_source_1l00015"/>00015 
<anchor xml:id="__player_8cs_source_1l00016"/><link linkend="_class_player_1ad64449e2fb7a7b527d08ce823dc4e2e4">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector2&#32;<link linkend="_class_player_1ad64449e2fb7a7b527d08ce823dc4e2e4">DashDirection</link>&#32;=&#32;Vector2.Zero;
<anchor xml:id="__player_8cs_source_1l00017"/><link linkend="_class_player_1ad418db551711bceecb6a0f504727ca91">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_player_1ad418db551711bceecb6a0f504727ca91">DashSpeed</link>&#32;=&#32;300f;
<anchor xml:id="__player_8cs_source_1l00018"/><link linkend="_class_player_1a3cf5113d8c5c04d4fc9822c7b33a4fa1">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_player_1a3cf5113d8c5c04d4fc9822c7b33a4fa1">IsDashing</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__player_8cs_source_1l00019"/><link linkend="_class_player_1ae5ed42be5737449538f03a89ae258780">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_player_1ae5ed42be5737449538f03a89ae258780">CanDash</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__player_8cs_source_1l00020"/><link linkend="_class_player_1a33ad87048d2a086b8b74cf2d610aac8e">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_player_1a33ad87048d2a086b8b74cf2d610aac8e">DashTrailInterval</link>&#32;=&#32;0.05f;
<anchor xml:id="__player_8cs_source_1l00021"/><link linkend="_class_player_1af96d2cf00ca821528f6624b9d746de79">00021</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_player_1af96d2cf00ca821528f6624b9d746de79">DashTrailTimer</link>&#32;=&#32;0f;
<anchor xml:id="__player_8cs_source_1l00022"/>00022 
<anchor xml:id="__player_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Referenzen&#32;zu&#32;den&#32;Knoten</emphasis>
<anchor xml:id="__player_8cs_source_1l00024"/><link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">AnimationPlayer</link>&#32;<link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">AnimationPlayer</link>;
<anchor xml:id="__player_8cs_source_1l00025"/><link linkend="_class_player_1a650e61374596e594f38f5d9caf11c3fb">00025</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Sprite2D&#32;<link linkend="_class_player_1a650e61374596e594f38f5d9caf11c3fb">Sprite</link>;
<anchor xml:id="__player_8cs_source_1l00026"/><link linkend="_class_player_1afc303e1e2108345937a0834cb03fee60">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Timer&#32;<link linkend="_class_player_1afc303e1e2108345937a0834cb03fee60">DashEffect</link>;
<anchor xml:id="__player_8cs_source_1l00027"/><link linkend="_class_player_1ae1197f00cda479e2e18246010b36fa9d">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Timer&#32;<link linkend="_class_player_1ae1197f00cda479e2e18246010b36fa9d">DashTimer</link>;
<anchor xml:id="__player_8cs_source_1l00028"/><link linkend="_class_player_1a64d74400579bd882301f0ec6a6135ed8">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;CollisionShape2D&#32;<link linkend="_class_player_1a64d74400579bd882301f0ec6a6135ed8">SwordCollision</link>;
<anchor xml:id="__player_8cs_source_1l00029"/><link linkend="_class_player_1a5b037b53d0e7c4eacd6e09b71463862c">00029</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;CollisionShape2D&#32;<link linkend="_class_player_1a5b037b53d0e7c4eacd6e09b71463862c">PlayerHitbox</link>;
<anchor xml:id="__player_8cs_source_1l00030"/><link linkend="_class_player_1aaef48228442e066781c02ea9b8c3f694">00030</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_blood_vial">BloodVial</link>&#32;<link linkend="_class_player_1aaef48228442e066781c02ea9b8c3f694">BloodVials</link>;
<anchor xml:id="__player_8cs_source_1l00031"/><link linkend="_class_player_1aa23d4f9699cd9b706e9b6945a365699b">00031</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Label&#32;<link linkend="_class_player_1aa23d4f9699cd9b706e9b6945a365699b">SinDisplay</link>;
<anchor xml:id="__player_8cs_source_1l00032"/>00032 
<anchor xml:id="__player_8cs_source_1l00033"/><link linkend="_class_player_1ae9c0ec6f7123f5832d82c2cc68eedb97">00033</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector2&#32;<link linkend="_class_player_1ae9c0ec6f7123f5832d82c2cc68eedb97">HauptHitbox</link>;
<anchor xml:id="__player_8cs_source_1l00034"/><link linkend="_class_player_1a57850da38e07a680af71543a3e02de1a">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_player_1a57850da38e07a680af71543a3e02de1a">LastAttack</link>&#32;=&#32;0;
<anchor xml:id="__player_8cs_source_1l00035"/>00035 
<anchor xml:id="__player_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="comment">//Variablen&#32;für&#32;Stamina</emphasis>
<anchor xml:id="__player_8cs_source_1l00037"/><link linkend="_class_player_1adda3c3e385b428e061d6d1ccd25f23cb">00037</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_player_1adda3c3e385b428e061d6d1ccd25f23cb">TimeSinceLastStaminaUse</link>&#32;=&#32;0f;
<anchor xml:id="__player_8cs_source_1l00038"/>00038 
<anchor xml:id="__player_8cs_source_1l00043"/><link linkend="_class_player_1ae192a478a80f0e93e01339d62cdd6f6d">00043</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1ae192a478a80f0e93e01339d62cdd6f6d">_Ready</link>()&#32;{
<anchor xml:id="__player_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">AnimationPlayer</link>&#32;=&#32;GetNode&lt;AnimationPlayer&gt;(<emphasis role="stringliteral">&quot;AnimationPlayer&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a650e61374596e594f38f5d9caf11c3fb">Sprite</link>&#32;=&#32;GetNode&lt;Sprite2D&gt;(<emphasis role="stringliteral">&quot;Sprite2D&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1afc303e1e2108345937a0834cb03fee60">DashEffect</link>&#32;=&#32;GetNode&lt;Timer&gt;(<emphasis role="stringliteral">&quot;DashEffect&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1ae1197f00cda479e2e18246010b36fa9d">DashTimer</link>&#32;=&#32;GetNode&lt;Timer&gt;(<emphasis role="stringliteral">&quot;DashTimer&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a64d74400579bd882301f0ec6a6135ed8">SwordCollision</link>&#32;=&#32;GetNode&lt;CollisionShape2D&gt;(<emphasis role="stringliteral">&quot;Sprite2D/SwordHit/SwordCollision&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a5b037b53d0e7c4eacd6e09b71463862c">PlayerHitbox</link>&#32;=&#32;GetNode&lt;CollisionShape2D&gt;(<emphasis role="stringliteral">&quot;PlayerHitbox&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1ae9c0ec6f7123f5832d82c2cc68eedb97">HauptHitbox</link>&#32;=&#32;<link linkend="_class_player_1a5b037b53d0e7c4eacd6e09b71463862c">PlayerHitbox</link>.Position;
<anchor xml:id="__player_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1aaef48228442e066781c02ea9b8c3f694">BloodVials</link>&#32;=&#32;GetNode&lt;BloodVial&gt;(<emphasis role="stringliteral">&quot;../HUD/BloodVial/Counter&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1aa23d4f9699cd9b706e9b6945a365699b">SinDisplay</link>&#32;=&#32;GetNode&lt;Label&gt;(<emphasis role="stringliteral">&quot;../HUD/SinAmount/Counter&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00053"/>00053 
<anchor xml:id="__player_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SinDisplay.Text&#32;=&#32;<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1a0b2b3398a02e8fbafe3c41dd466c57d0">GetSinAmount</link>()&#32;+&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__player_8cs_source_1l00055"/>00055 
<anchor xml:id="__player_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_navigation_manager">NavigationManager</link>&#32;navigationManager&#32;=&#32;GetNode&lt;NavigationManager&gt;(<emphasis role="stringliteral">&quot;/root/NavigationManager&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;navigationManager.Connect(<emphasis role="stringliteral">&quot;OnTriggerPlayerSpawn&quot;</emphasis>,&#32;<emphasis role="keyword">new</emphasis>&#32;Callable(<emphasis role="keyword">this</emphasis>,&#32;nameof(<link linkend="_class_player_1a026f050e54322e805ad546ee99483e6e">OnSpawn</link>)));
<anchor xml:id="__player_8cs_source_1l00058"/>00058 
<anchor xml:id="__player_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Position&#32;=&#32;<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1a77ca820f184b31dd9590bc8613f8566e">GetPosition</link>();
<anchor xml:id="__player_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00061"/>00061 
<anchor xml:id="__player_8cs_source_1l00067"/><link linkend="_class_player_1a02ef3667915da4d1a2e21fd6c9f93e48">00067</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a02ef3667915da4d1a2e21fd6c9f93e48">_PhysicsProcess</link>(<emphasis role="keywordtype">double</emphasis>&#32;DeltaTime)&#32;{
<anchor xml:id="__player_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Gravitation&#32;hinzufügen,&#32;wenn&#32;der&#32;Charakter&#32;nicht&#32;am&#32;Boden&#32;ist</emphasis>
<anchor xml:id="__player_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!IsOnFloor())&#32;{
<anchor xml:id="__player_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;+=&#32;GetGravity()&#32;*&#32;(float)DeltaTime;
<anchor xml:id="__player_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__player_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1ae5ed42be5737449538f03a89ae258780">CanDash</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;&#32;<emphasis role="comment">//&#32;Dash&#32;wird&#32;zurückgesetzt,&#32;wenn&#32;der&#32;Charakter&#32;am&#32;Boden&#32;ist</emphasis>
<anchor xml:id="__player_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00074"/>00074 
<anchor xml:id="__player_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1adda3c3e385b428e061d6d1ccd25f23cb">TimeSinceLastStaminaUse</link>&#32;+=&#32;(float)DeltaTime;
<anchor xml:id="__player_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1ab715416eb7dbe1d4d320d4ba21999072">RegenerateStamina</link>(20f,&#32;DeltaTime);
<anchor xml:id="__player_8cs_source_1l00077"/>00077 
<anchor xml:id="__player_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Heal</emphasis>
<anchor xml:id="__player_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(Input.IsActionJustPressed(<emphasis role="stringliteral">&quot;heal&quot;</emphasis>)){
<anchor xml:id="__player_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1aaef48228442e066781c02ea9b8c3f694">BloodVials</link>.<link linkend="_class_blood_vial_1a0e0fed9a887f1fa7f068906273d43275">UseBloodVial</link>();
<anchor xml:id="__player_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__player_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a8237be052507e34edec4776fa25f9544">HandleJump</link>();
<anchor xml:id="__player_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1af8fce0260ebcc78bb46e2a8393eb2fb7">HandleMovement</link>(DeltaTime);
<anchor xml:id="__player_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MoveAndSlide();
<anchor xml:id="__player_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a6dd10a495418b531f7e65ab238368bdc">UpdateAnimations</link>();
<anchor xml:id="__player_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1adb53f7019a00edfe089c3dfd205438c2">SetPosition</link>(Position);
<anchor xml:id="__player_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00089"/>00089 
<anchor xml:id="__player_8cs_source_1l00094"/><link linkend="_class_player_1a8237be052507e34edec4776fa25f9544">00094</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a8237be052507e34edec4776fa25f9544">HandleJump</link>()&#32;{
<anchor xml:id="__player_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sprungzähler&#32;zurücksetzen,&#32;wenn&#32;der&#32;Charakter&#32;am&#32;Boden&#32;ist</emphasis>
<anchor xml:id="__player_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1a9c16b607216c433cd53e2a56fedfeeed">JumpCount</link>&#32;!=&#32;0&#32;&amp;&amp;&#32;IsOnFloor())&#32;{
<anchor xml:id="__player_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a9c16b607216c433cd53e2a56fedfeeed">JumpCount</link>&#32;=&#32;0;
<anchor xml:id="__player_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00099"/>00099 
<anchor xml:id="__player_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Überprüfen,&#32;ob&#32;der&#32;Sprung-Button&#32;gedrückt&#32;wurde&#32;und&#32;der&#32;Charakter&#32;noch&#32;Sprünge&#32;übrig&#32;hat</emphasis>
<anchor xml:id="__player_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.IsActionJustPressed(<emphasis role="stringliteral">&quot;ui_up&quot;</emphasis>)&#32;&amp;&amp;&#32;<link linkend="_class_player_1a9c16b607216c433cd53e2a56fedfeeed">JumpCount</link>&#32;&lt;&#32;<link linkend="_class_player_1a7bcbe69f9f5e347cf485306520b1dadd">JumpMax</link>)&#32;{
<anchor xml:id="__player_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1a9c16b607216c433cd53e2a56fedfeeed">JumpCount</link>&#32;==&#32;0)&#32;{
<anchor xml:id="__player_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Erster&#32;Sprung&#32;ohne&#32;Stamina-Verlust</emphasis>
<anchor xml:id="__player_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(Velocity.X,&#32;<link linkend="_class_player_1a8da3506a415217b5eeacbf254620b0a1">JUMP_VELOCITY</link>);
<anchor xml:id="__player_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a9c16b607216c433cd53e2a56fedfeeed">JumpCount</link>&#32;+=&#32;1;
<anchor xml:id="__player_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1a9c16b607216c433cd53e2a56fedfeeed">JumpCount</link>&#32;&gt;&#32;0)&#32;{
<anchor xml:id="__player_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Beim&#32;Doppelsprung&#32;Stamina&#32;prüfen&#32;und&#32;abziehen</emphasis>
<anchor xml:id="__player_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1ac69e2d647a9d7317b01599b2a5695199">UseStamina</link>(15))&#32;{
<anchor xml:id="__player_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(Velocity.X,&#32;<link linkend="_class_player_1a8da3506a415217b5eeacbf254620b0a1">JUMP_VELOCITY</link>);
<anchor xml:id="__player_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a9c16b607216c433cd53e2a56fedfeeed">JumpCount</link>&#32;+=&#32;1;
<anchor xml:id="__player_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;
<anchor xml:id="__player_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00115"/>00115 
<anchor xml:id="__player_8cs_source_1l00121"/><link linkend="_class_player_1af8fce0260ebcc78bb46e2a8393eb2fb7">00121</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1af8fce0260ebcc78bb46e2a8393eb2fb7">HandleMovement</link>(<emphasis role="keywordtype">double</emphasis>&#32;DeltaTime)&#32;{
<anchor xml:id="__player_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;direction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(Input.GetAxis(<emphasis role="stringliteral">&quot;ui_left&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;ui_right&quot;</emphasis>),&#32;Input.GetAxis(<emphasis role="stringliteral">&quot;ui_up&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;ui_down&quot;</emphasis>)).Normalized();
<anchor xml:id="__player_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;currentSpeed&#32;=&#32;<link linkend="_class_player_1a23e57f8d9bfe69ab49b86a94bcc8c37d">SPEED</link>;
<anchor xml:id="__player_8cs_source_1l00124"/>00124 
<anchor xml:id="__player_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sprite&#32;umdrehen&#32;basierend&#32;auf&#32;der&#32;Bewegungsrichtung&#32;und&#32;Kollision&#32;umdrehen</emphasis>
<anchor xml:id="__player_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(direction.X&#32;&lt;&#32;0)&#32;{
<anchor xml:id="__player_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sprite.FlipH&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__player_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SwordCollision.Position&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(-Mathf.Abs(<link linkend="_class_player_1a64d74400579bd882301f0ec6a6135ed8">SwordCollision</link>.Position.X),&#32;<link linkend="_class_player_1a64d74400579bd882301f0ec6a6135ed8">SwordCollision</link>.Position.Y);
<anchor xml:id="__player_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PlayerHitbox.Position&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(<link linkend="_class_player_1a650e61374596e594f38f5d9caf11c3fb">Sprite</link>.Position.X&#32;*&#32;1.8f,&#32;<link linkend="_class_player_1a5b037b53d0e7c4eacd6e09b71463862c">PlayerHitbox</link>.Position.Y);
<anchor xml:id="__player_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(direction.X&#32;&gt;&#32;0)&#32;{
<anchor xml:id="__player_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sprite.FlipH&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__player_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SwordCollision.Position&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(Mathf.Abs(<link linkend="_class_player_1a64d74400579bd882301f0ec6a6135ed8">SwordCollision</link>.Position.X),&#32;<link linkend="_class_player_1a64d74400579bd882301f0ec6a6135ed8">SwordCollision</link>.Position.Y);
<anchor xml:id="__player_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PlayerHitbox.Position&#32;=&#32;<link linkend="_class_player_1ae9c0ec6f7123f5832d82c2cc68eedb97">HauptHitbox</link>;
<anchor xml:id="__player_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00135"/>00135 
<anchor xml:id="__player_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Geschwindigkeit&#32;reduzieren,&#32;wenn&#32;der&#32;Spieler&#32;angreift</emphasis>
<anchor xml:id="__player_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">AnimationPlayer</link>.CurrentAnimation&#32;==&#32;<emphasis role="stringliteral">&quot;light_attack&quot;</emphasis>)&#32;{
<anchor xml:id="__player_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentSpeed&#32;*=&#32;0.5f;
<anchor xml:id="__player_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">AnimationPlayer</link>.CurrentAnimation&#32;==&#32;<emphasis role="stringliteral">&quot;heavy_attack&quot;</emphasis>)&#32;{
<anchor xml:id="__player_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentSpeed&#32;*=&#32;0.15f;
<anchor xml:id="__player_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00142"/>00142 
<anchor xml:id="__player_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Blockieren&#32;stoppt&#32;die&#32;Bewegung</emphasis>
<anchor xml:id="__player_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1ac5b003495e551fee56ed26d26a239432">IsBlocking</link>())&#32;{
<anchor xml:id="__player_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentSpeed&#32;=&#32;0;
<anchor xml:id="__player_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00147"/>00147 
<anchor xml:id="__player_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1a3cf5113d8c5c04d4fc9822c7b33a4fa1">IsDashing</link>)&#32;{
<anchor xml:id="__player_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1aeb354dd739e4fb8af95215e633f2ae30">DashInProgress</link>(DeltaTime);
<anchor xml:id="__player_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__player_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Normale&#32;Bewegung&#32;verarbeiten,&#32;wenn&#32;kein&#32;Dash&#32;aktiv&#32;ist</emphasis>
<anchor xml:id="__player_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(direction&#32;!=&#32;Vector2.Zero)&#32;{
<anchor xml:id="__player_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(direction.X&#32;*&#32;currentSpeed,&#32;Velocity.Y);
<anchor xml:id="__player_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__player_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(Mathf.MoveToward(Velocity.X,&#32;0,&#32;<link linkend="_class_player_1a23e57f8d9bfe69ab49b86a94bcc8c37d">SPEED</link>),&#32;Velocity.Y);
<anchor xml:id="__player_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00157"/>00157 
<anchor xml:id="__player_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Überprüfen,&#32;ob&#32;der&#32;Dash-Button&#32;gedrückt&#32;wurde&#32;mit&#32;eine&#32;Bewegungsrichtung&#32;und&#32;nicht&#32;schon&#32;am&#32;angreifen&#32;ist</emphasis>
<anchor xml:id="__player_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.IsActionJustPressed(<emphasis role="stringliteral">&quot;dash&quot;</emphasis>)&#32;&amp;&amp;&#32;direction&#32;!=&#32;Vector2.Zero&#32;&amp;&amp;&#32;<link linkend="_class_player_1ae5ed42be5737449538f03a89ae258780">CanDash</link>&#32;&amp;&amp;&#32;!<link linkend="_class_player_1ab8df147009969880162db05e243cd129">IsAttacking</link>())&#32;{
<anchor xml:id="__player_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Wenn&#32;der&#32;Player&#32;genug&#32;Stamina&#32;hat&#32;kann&#32;er&#32;dashen</emphasis>
<anchor xml:id="__player_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1ac69e2d647a9d7317b01599b2a5695199">UseStamina</link>(20)){
<anchor xml:id="__player_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1ad64449e2fb7a7b527d08ce823dc4e2e4">DashDirection</link>&#32;=&#32;direction;
<anchor xml:id="__player_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a9d3abf4c257f11a5838c978ab3abb27f">StartDash</link>();&#32;
<anchor xml:id="__player_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00168"/>00168 
<anchor xml:id="__player_8cs_source_1l00172"/><link linkend="_class_player_1a9d3abf4c257f11a5838c978ab3abb27f">00172</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a9d3abf4c257f11a5838c978ab3abb27f">StartDash</link>()&#32;{
<anchor xml:id="__player_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetCollisionLayerValue(1,<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__player_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetCollisionMaskValue(1,<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__player_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a3cf5113d8c5c04d4fc9822c7b33a4fa1">IsDashing</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__player_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1ae5ed42be5737449538f03a89ae258780">CanDash</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__player_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DashTimer.Timeout&#32;+=&#32;<link linkend="_class_player_1a53389f72f48d7980aedb5e8b75d237dd">StopDash</link>;
<anchor xml:id="__player_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1ae1197f00cda479e2e18246010b36fa9d">DashTimer</link>.Start();
<anchor xml:id="__player_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1afc303e1e2108345937a0834cb03fee60">DashEffect</link>.Start();
<anchor xml:id="__player_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1af96d2cf00ca821528f6624b9d746de79">DashTrailTimer</link>&#32;=&#32;0f;
<anchor xml:id="__player_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00182"/>00182 
<anchor xml:id="__player_8cs_source_1l00187"/><link linkend="_class_player_1aeb354dd739e4fb8af95215e633f2ae30">00187</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1aeb354dd739e4fb8af95215e633f2ae30">DashInProgress</link>(<emphasis role="keywordtype">double</emphasis>&#32;DeltaTime)&#32;{
<anchor xml:id="__player_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Charakter&#32;bewegt&#32;sich&#32;in&#32;die&#32;Dash-Richtung&#32;mit&#32;Dash-Geschwindigkeit</emphasis>
<anchor xml:id="__player_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1ad64449e2fb7a7b527d08ce823dc4e2e4">DashDirection</link>&#32;==&#32;Vector2.Up)&#32;{
<anchor xml:id="__player_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;<link linkend="_class_player_1ad64449e2fb7a7b527d08ce823dc4e2e4">DashDirection</link>&#32;/&#32;1.5f&#32;*&#32;<link linkend="_class_player_1ad418db551711bceecb6a0f504727ca91">DashSpeed</link>;
<anchor xml:id="__player_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__player_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;<link linkend="_class_player_1ad64449e2fb7a7b527d08ce823dc4e2e4">DashDirection</link>&#32;*&#32;<link linkend="_class_player_1ad418db551711bceecb6a0f504727ca91">DashSpeed</link>;
<anchor xml:id="__player_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00194"/>00194 
<anchor xml:id="__player_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Dash-Trail&#32;bei&#32;Intervallen&#32;erstellen</emphasis>
<anchor xml:id="__player_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1af96d2cf00ca821528f6624b9d746de79">DashTrailTimer</link>&#32;-=&#32;(float)DeltaTime;
<anchor xml:id="__player_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1af96d2cf00ca821528f6624b9d746de79">DashTrailTimer</link>&#32;&lt;=&#32;0f)&#32;{
<anchor xml:id="__player_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a0aa4500de693c81904bba34fb91df560">CreateDashEffect</link>();
<anchor xml:id="__player_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1af96d2cf00ca821528f6624b9d746de79">DashTrailTimer</link>&#32;=&#32;<link linkend="_class_player_1a33ad87048d2a086b8b74cf2d610aac8e">DashTrailInterval</link>;
<anchor xml:id="__player_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00202"/>00202 
<anchor xml:id="__player_8cs_source_1l00207"/><link linkend="_class_player_1a0aa4500de693c81904bba34fb91df560">00207</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a0aa4500de693c81904bba34fb91df560">CreateDashEffect</link>()&#32;{
<anchor xml:id="__player_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sprite2D&#32;PlayerCopyNode&#32;=&#32;(Sprite2D)<link linkend="_class_player_1a650e61374596e594f38f5d9caf11c3fb">Sprite</link>.Duplicate();
<anchor xml:id="__player_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetParent().AddChild(PlayerCopyNode);
<anchor xml:id="__player_8cs_source_1l00210"/>00210 
<anchor xml:id="__player_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CollisionShape2D&#32;SwordCollisionCopy&#32;=&#32;PlayerCopyNode.GetNode&lt;CollisionShape2D&gt;(<emphasis role="stringliteral">&quot;SwordHit/SwordCollision&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SwordCollisionCopy&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__player_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SwordCollisionCopy.Disabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;&#32;<emphasis role="comment">//&#32;Deaktiviere&#32;die&#32;Kollision&#32;der&#32;Kopie</emphasis>
<anchor xml:id="__player_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00215"/>00215 
<anchor xml:id="__player_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PlayerCopyNode.GlobalPosition&#32;=&#32;GlobalPosition&#32;+&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;<link linkend="_class_player_1a650e61374596e594f38f5d9caf11c3fb">Sprite</link>.Texture.GetHeight()&#32;*&#32;<link linkend="_class_player_1a650e61374596e594f38f5d9caf11c3fb">Sprite</link>.Scale.Y&#32;*&#32;-0.5f);
<anchor xml:id="__player_8cs_source_1l00217"/>00217 
<anchor xml:id="__player_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Verblassen-Effekt&#32;für&#32;den&#32;Dash-Trail&#32;hinzufügen</emphasis>
<anchor xml:id="__player_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;AnimationTime&#32;=&#32;(float)(<link linkend="_class_player_1ae1197f00cda479e2e18246010b36fa9d">DashTimer</link>.WaitTime&#32;/&#32;3);
<anchor xml:id="__player_8cs_source_1l00220"/>00220 
<anchor xml:id="__player_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Timer&#32;FadeTimer1&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Timer();
<anchor xml:id="__player_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddChild(FadeTimer1);
<anchor xml:id="__player_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FadeTimer1.Timeout&#32;+=&#32;()&#32;=&gt;&#32;{
<anchor xml:id="__player_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IsInstanceValid(PlayerCopyNode))&#32;{
<anchor xml:id="__player_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PlayerCopyNode.Modulate&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(PlayerCopyNode.Modulate,&#32;0.4f);
<anchor xml:id="__player_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__player_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FadeTimer1.Start(AnimationTime);
<anchor xml:id="__player_8cs_source_1l00229"/>00229 
<anchor xml:id="__player_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Timer&#32;FadeTimer2&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Timer();
<anchor xml:id="__player_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddChild(FadeTimer2);
<anchor xml:id="__player_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FadeTimer2.Timeout&#32;+=&#32;()&#32;=&gt;&#32;{
<anchor xml:id="__player_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IsInstanceValid(PlayerCopyNode))&#32;{
<anchor xml:id="__player_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PlayerCopyNode.Modulate&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(PlayerCopyNode.Modulate,&#32;0.2f);
<anchor xml:id="__player_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__player_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FadeTimer2.Start(AnimationTime&#32;*&#32;2);
<anchor xml:id="__player_8cs_source_1l00238"/>00238 
<anchor xml:id="__player_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Timer&#32;FadeTimer3&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Timer();
<anchor xml:id="__player_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddChild(FadeTimer3);
<anchor xml:id="__player_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FadeTimer3.Timeout&#32;+=&#32;()&#32;=&gt;&#32;{
<anchor xml:id="__player_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IsInstanceValid(PlayerCopyNode))&#32;{
<anchor xml:id="__player_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PlayerCopyNode.QueueFree();
<anchor xml:id="__player_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__player_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FadeTimer3.Start(AnimationTime&#32;*&#32;3);
<anchor xml:id="__player_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00248"/>00248 
<anchor xml:id="__player_8cs_source_1l00252"/><link linkend="_class_player_1a53389f72f48d7980aedb5e8b75d237dd">00252</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a53389f72f48d7980aedb5e8b75d237dd">StopDash</link>()&#32;{
<anchor xml:id="__player_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a3cf5113d8c5c04d4fc9822c7b33a4fa1">IsDashing</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__player_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1afc303e1e2108345937a0834cb03fee60">DashEffect</link>.Stop();
<anchor xml:id="__player_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1ae1197f00cda479e2e18246010b36fa9d">DashTimer</link>.Stop();
<anchor xml:id="__player_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DashTimer.Timeout&#32;-=&#32;<link linkend="_class_player_1a53389f72f48d7980aedb5e8b75d237dd">StopDash</link>;
<anchor xml:id="__player_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetCollisionLayerValue(1,<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__player_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetCollisionMaskValue(1,<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__player_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00260"/>00260 
<anchor xml:id="__player_8cs_source_1l00265"/><link linkend="_class_player_1ab8df147009969880162db05e243cd129">00265</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_player_1ab8df147009969880162db05e243cd129">IsAttacking</link>()&#32;{
<anchor xml:id="__player_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AnimationPlayer.CurrentAnimation&#32;==&#32;<emphasis role="stringliteral">&quot;heavy_attack&quot;</emphasis>&#32;||&#32;AnimationPlayer.CurrentAnimation&#32;==&#32;<emphasis role="stringliteral">&quot;light_attack&quot;</emphasis>;
<anchor xml:id="__player_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00268"/>00268 
<anchor xml:id="__player_8cs_source_1l00273"/><link linkend="_class_player_1ac5b003495e551fee56ed26d26a239432">00273</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_player_1ac5b003495e551fee56ed26d26a239432">IsBlocking</link>()&#32;{
<anchor xml:id="__player_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AnimationPlayer.CurrentAnimation&#32;==&#32;<emphasis role="stringliteral">&quot;block&quot;</emphasis>;
<anchor xml:id="__player_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00276"/>00276 
<anchor xml:id="__player_8cs_source_1l00280"/><link linkend="_class_player_1a750d1c5325522c39d232332349e4d2d2">00280</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a750d1c5325522c39d232332349e4d2d2">MaxHeal</link>(){
<anchor xml:id="__player_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1aaed3690620c6ba9a8866d0c35b4f26d7">SetCurrentHealth</link>(<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1a6a24773d00e75be9747b99681ac76127">GetMaxHealthPoints</link>());
<anchor xml:id="__player_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00283"/>00283 
<anchor xml:id="__player_8cs_source_1l00289"/><link linkend="_class_player_1aa1a0addae97cec09d2e86f3060a05438">00289</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1aa1a0addae97cec09d2e86f3060a05438">TakeDamage</link>(<link linkend="_class_damage">Damage</link>&#32;<link linkend="_class_damage">Damage</link>){
<anchor xml:id="__player_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;totalDamage&#32;=&#32;<link linkend="_class_damage">Damage</link>.<link linkend="_class_damage_1a4d43580112f089c208f9ba8e0b2559f0">GetTrueDMG</link>();
<anchor xml:id="__player_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_player_1ac5b003495e551fee56ed26d26a239432">IsBlocking</link>()){
<anchor xml:id="__player_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalDamage&#32;+=&#32;<link linkend="_class_damage">Damage</link>.<link linkend="_class_damage_1a084fad418a6be9edca3e3e32355e49c0">GetPhysicalDMG</link>();
<anchor xml:id="__player_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__player_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;CurrentStamina&#32;=&#32;<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1a3a170316e8384ab030f5f697b799a947">GetStamina</link>();
<anchor xml:id="__player_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CurrentStamina&#32;-=&#32;<link linkend="_class_damage">Damage</link>.<link linkend="_class_damage_1a084fad418a6be9edca3e3e32355e49c0">GetPhysicalDMG</link>();
<anchor xml:id="__player_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(CurrentStamina&#32;&lt;&#32;0){
<anchor xml:id="__player_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalDamage&#32;-=&#32;CurrentStamina;
<anchor xml:id="__player_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1ab341f12827a6bdcfebb826dff43e82e3">SetStamina</link>(CurrentStamina);
<anchor xml:id="__player_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00301"/>00301 
<anchor xml:id="__player_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1aaed3690620c6ba9a8866d0c35b4f26d7">SetCurrentHealth</link>(<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1a0ec1075ba0983a3df42454b110194c0d">GetCurrentHealth</link>()&#32;-&#32;totalDamage);
<anchor xml:id="__player_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Position&#32;+=&#32;<link linkend="_class_damage">Damage</link>.<link linkend="_class_damage_1a60741a1e632c21788499ddc284b2844b">GetPushAmount</link>();
<anchor xml:id="__player_8cs_source_1l00304"/>00304 
<anchor xml:id="__player_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Überprüfe,&#32;ob&#32;der&#32;Spieler&#32;gestorben&#32;ist</emphasis>
<anchor xml:id="__player_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1a0ec1075ba0983a3df42454b110194c0d">GetCurrentHealth</link>()&#32;&lt;=&#32;0){
<anchor xml:id="__player_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GD.Print(<emphasis role="stringliteral">&quot;Spieler&#32;ist&#32;gestorben!&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1ae1104e2e3726f7bac674615c4e33b2bf">Respawn</link>();
<anchor xml:id="__player_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00311"/>00311 
<anchor xml:id="__player_8cs_source_1l00317"/><link linkend="_class_player_1a01ad03754c12b1288b69cdd42cb6f85e">00317</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_damage">Damage</link>&#32;<link linkend="_class_player_1a01ad03754c12b1288b69cdd42cb6f85e">GetDamage</link>(){
<anchor xml:id="__player_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_player_1a57850da38e07a680af71543a3e02de1a">LastAttack</link>&#32;==&#32;1){
<anchor xml:id="__player_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_damage">Damage</link>(50,&#32;0,&#32;Vector2.Zero,&#32;<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__player_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_player_1a57850da38e07a680af71543a3e02de1a">LastAttack</link>&#32;==&#32;2){
<anchor xml:id="__player_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;Push&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(20,0);
<anchor xml:id="__player_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_player_1a650e61374596e594f38f5d9caf11c3fb">Sprite</link>.FlipH){
<anchor xml:id="__player_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Push&#32;=&#32;-Push;
<anchor xml:id="__player_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_damage">Damage</link>(100,&#32;0,&#32;Push,&#32;<emphasis role="keyword">this</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__player_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_damage">Damage</link>(0,0,Vector2.Zero,&#32;<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__player_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00330"/>00330 
<anchor xml:id="__player_8cs_source_1l00336"/><link linkend="_class_player_1ab715416eb7dbe1d4d320d4ba21999072">00336</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1ab715416eb7dbe1d4d320d4ba21999072">RegenerateStamina</link>(<emphasis role="keywordtype">float</emphasis>&#32;Amount,&#32;<emphasis role="keywordtype">double</emphasis>&#32;delta)&#32;{
<anchor xml:id="__player_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Wenn&#32;die&#32;Verzögerungszeit&#32;erreicht&#32;wurde,&#32;regeneriere&#32;Stamina</emphasis>
<anchor xml:id="__player_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1adda3c3e385b428e061d6d1ccd25f23cb">TimeSinceLastStaminaUse</link>&#32;&gt;=&#32;1f)&#32;{
<anchor xml:id="__player_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1ab341f12827a6bdcfebb826dff43e82e3">SetStamina</link>(<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1a3a170316e8384ab030f5f697b799a947">GetStamina</link>()&#32;+&#32;Amount&#32;*&#32;(<emphasis role="keywordtype">float</emphasis>)delta);&#32;<emphasis role="comment">//&#32;Regeneriere&#32;Stamina&#32;abhängig&#32;von&#32;der&#32;Zeit</emphasis>
<anchor xml:id="__player_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00342"/>00342 
<anchor xml:id="__player_8cs_source_1l00349"/><link linkend="_class_player_1ac69e2d647a9d7317b01599b2a5695199">00349</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_player_1ac69e2d647a9d7317b01599b2a5695199">UseStamina</link>(<emphasis role="keywordtype">float</emphasis>&#32;Amount)&#32;{
<anchor xml:id="__player_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Versucht,&#32;eine&#32;bestimmte&#32;Menge&#32;an&#32;Stamina&#32;zu&#32;verbrauchen.</emphasis>
<anchor xml:id="__player_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Gibt&#32;true&#32;zurück,&#32;wenn&#32;genug&#32;Stamina&#32;verfügbar&#32;war;&#32;andernfalls&#32;false.</emphasis>
<anchor xml:id="__player_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1a3a170316e8384ab030f5f697b799a947">GetStamina</link>()&#32;&gt;=&#32;Amount)&#32;{
<anchor xml:id="__player_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1ab341f12827a6bdcfebb826dff43e82e3">SetStamina</link>(<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1a3a170316e8384ab030f5f697b799a947">GetStamina</link>()&#32;-&#32;Amount);
<anchor xml:id="__player_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1adda3c3e385b428e061d6d1ccd25f23cb">TimeSinceLastStaminaUse</link>&#32;=&#32;0f;
<anchor xml:id="__player_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__player_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00357"/>00357 
<anchor xml:id="__player_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__player_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00360"/>00360 
<anchor xml:id="__player_8cs_source_1l00365"/><link linkend="_class_player_1a0a59dfe03d542fa98f28f4c4eaa49a75">00365</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a0a59dfe03d542fa98f28f4c4eaa49a75">SlowPlayer</link>(<emphasis role="keywordtype">float</emphasis>&#32;SlowAmount){
<anchor xml:id="__player_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Velocity&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(Velocity.X&#32;*&#32;SlowAmount,&#32;Velocity.Y);
<anchor xml:id="__player_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;
<anchor xml:id="__player_8cs_source_1l00372"/><link linkend="_class_player_1ae1104e2e3726f7bac674615c4e33b2bf">00372</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1ae1104e2e3726f7bac674615c4e33b2bf">Respawn</link>(){
<anchor xml:id="__player_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;<link linkend="_class_navigation_manager">NavigationManager</link>&#32;=&#32;GetNode&lt;NavigationManager&gt;(<emphasis role="stringliteral">&quot;/root/NavigationManager&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_navigation_manager">NavigationManager</link>.<link linkend="_class_navigation_manager_1a5966bab1490d10dfc285507a0c8d8bb7">GoToLevel</link>(<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1ad868bae6deb062dbcc4702b276a27041">GetRespawnLevelTag</link>(),&#32;<emphasis role="stringliteral">&quot;spawn&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1aaef48228442e066781c02ea9b8c3f694">BloodVials</link>.<link linkend="_class_blood_vial_1a31a53feef846bd962bd5b525b0bc5c6c">ResetUses</link>();
<anchor xml:id="__player_8cs_source_1l00376"/>00376 
<anchor xml:id="__player_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;
<anchor xml:id="__player_8cs_source_1l00383"/><link linkend="_class_player_1ab04e4301a26dacc4e1d178d1b7d1d872">00383</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_blood_vial">BloodVial</link>&#32;<link linkend="_class_player_1ab04e4301a26dacc4e1d178d1b7d1d872">GetBloodVials</link>(){
<anchor xml:id="__player_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_player_1aaef48228442e066781c02ea9b8c3f694">BloodVials</link>;
<anchor xml:id="__player_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00386"/>00386 
<anchor xml:id="__player_8cs_source_1l00391"/><link linkend="_class_player_1aa718b6dab81ebd60b8b910ad8c7adff6">00391</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1aa718b6dab81ebd60b8b910ad8c7adff6">SetSinAmount</link>(<emphasis role="keywordtype">int</emphasis>&#32;Value)&#32;{
<anchor xml:id="__player_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SinAmount&#32;muss&#32;immer&#32;&gt;=&#32;0&#32;sein</emphasis>
<anchor xml:id="__player_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1a647991a1d154f8c2bc8d7032b43e35aa">SetSinAmount</link>(Value);
<anchor xml:id="__player_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SinDisplay.Text&#32;=&#32;<link linkend="_class_player_stats">PlayerStats</link>.<link linkend="_class_player_stats_1adeb667dbe2c1a76d1785ce07b6faf181">Instance</link>.<link linkend="_class_player_stats_1a0b2b3398a02e8fbafe3c41dd466c57d0">GetSinAmount</link>()&#32;+&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__player_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00396"/>00396 
<anchor xml:id="__player_8cs_source_1l00402"/><link linkend="_class_player_1a026f050e54322e805ad546ee99483e6e">00402</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a026f050e54322e805ad546ee99483e6e">OnSpawn</link>(Vector2&#32;position,&#32;<emphasis role="keywordtype">string</emphasis>&#32;direction){
<anchor xml:id="__player_8cs_source_1l00403"/>00403 
<anchor xml:id="__player_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Spielerposition&#32;auf&#32;die&#32;übergebene&#32;Position&#32;setzen</emphasis>
<anchor xml:id="__player_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(direction&#32;==&#32;<emphasis role="stringliteral">&quot;right&quot;</emphasis>)
<anchor xml:id="__player_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__player_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;the&#32;x&#32;value&#32;by&#32;adding&#32;50&#32;to&#32;it,&#32;keep&#32;the&#32;original&#32;y&#32;value</emphasis>
<anchor xml:id="__player_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sprite.FlipH&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__player_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;position&#32;with&#32;{&#32;X&#32;=&#32;position.X&#32;+&#32;25&#32;};
<anchor xml:id="__player_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(direction&#32;==&#32;<emphasis role="stringliteral">&quot;left&quot;</emphasis>)
<anchor xml:id="__player_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__player_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;the&#32;x&#32;value&#32;by&#32;subtracting&#32;50&#32;from&#32;it,&#32;keep&#32;the&#32;original&#32;y&#32;value</emphasis>
<anchor xml:id="__player_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sprite.FlipH&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__player_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;position&#32;with&#32;{&#32;X&#32;=&#32;position.X&#32;-&#32;25&#32;};
<anchor xml:id="__player_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Position&#32;=&#32;position;
<anchor xml:id="__player_8cs_source_1l00418"/>00418 
<anchor xml:id="__player_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00420"/>00420 
<anchor xml:id="__player_8cs_source_1l00421"/>00421 
<anchor xml:id="__player_8cs_source_1l00425"/><link linkend="_class_player_1a6dd10a495418b531f7e65ab238368bdc">00425</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_player_1a6dd10a495418b531f7e65ab238368bdc">UpdateAnimations</link>()&#32;{
<anchor xml:id="__player_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.IsActionJustPressed(<emphasis role="stringliteral">&quot;light_attack&quot;</emphasis>)&#32;&amp;&amp;&#32;!<link linkend="_class_player_1a3cf5113d8c5c04d4fc9822c7b33a4fa1">IsDashing</link>&#32;&amp;&amp;&#32;!<link linkend="_class_player_1ab8df147009969880162db05e243cd129">IsAttacking</link>())&#32;{
<anchor xml:id="__player_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1ac69e2d647a9d7317b01599b2a5695199">UseStamina</link>(10)){
<anchor xml:id="__player_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a57850da38e07a680af71543a3e02de1a">LastAttack</link>&#32;=&#32;1;
<anchor xml:id="__player_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">AnimationPlayer</link>.Play(<emphasis role="stringliteral">&quot;light_attack&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.IsActionJustPressed(<emphasis role="stringliteral">&quot;heavy_attack&quot;</emphasis>)&#32;&amp;&amp;&#32;!<link linkend="_class_player_1a3cf5113d8c5c04d4fc9822c7b33a4fa1">IsDashing</link>&#32;&amp;&amp;&#32;!<link linkend="_class_player_1ab8df147009969880162db05e243cd129">IsAttacking</link>())&#32;{
<anchor xml:id="__player_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1ac69e2d647a9d7317b01599b2a5695199">UseStamina</link>(25)){
<anchor xml:id="__player_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a57850da38e07a680af71543a3e02de1a">LastAttack</link>&#32;=&#32;2;
<anchor xml:id="__player_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">AnimationPlayer</link>.Play(<emphasis role="stringliteral">&quot;heavy_attack&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Input.IsActionPressed(<emphasis role="stringliteral">&quot;block&quot;</emphasis>)&#32;&amp;&amp;&#32;!<link linkend="_class_player_1a3cf5113d8c5c04d4fc9822c7b33a4fa1">IsDashing</link>&#32;&amp;&amp;&#32;!<link linkend="_class_player_1ab8df147009969880162db05e243cd129">IsAttacking</link>()&#32;&amp;&amp;&#32;IsOnFloor())&#32;{
<anchor xml:id="__player_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_player_1ac69e2d647a9d7317b01599b2a5695199">UseStamina</link>(0)){
<anchor xml:id="__player_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">AnimationPlayer</link>.Play(<emphasis role="stringliteral">&quot;block&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a57850da38e07a680af71543a3e02de1a">LastAttack</link>&#32;=&#32;0;
<anchor xml:id="__player_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00443"/>00443 
<anchor xml:id="__player_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IsOnFloor()&#32;&amp;&amp;&#32;!<link linkend="_class_player_1ab8df147009969880162db05e243cd129">IsAttacking</link>()&#32;&amp;&amp;&#32;!<link linkend="_class_player_1ac5b003495e551fee56ed26d26a239432">IsBlocking</link>())&#32;{
<anchor xml:id="__player_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a57850da38e07a680af71543a3e02de1a">LastAttack</link>&#32;=&#32;0;
<anchor xml:id="__player_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Velocity.X&#32;==&#32;0)&#32;{
<anchor xml:id="__player_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">AnimationPlayer</link>.Play(<emphasis role="stringliteral">&quot;idle&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__player_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">AnimationPlayer</link>.Play(<emphasis role="stringliteral">&quot;run&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!IsOnFloor()&#32;&amp;&amp;&#32;!<link linkend="_class_player_1ab8df147009969880162db05e243cd129">IsAttacking</link>()&#32;&amp;&amp;&#32;!<link linkend="_class_player_1ac5b003495e551fee56ed26d26a239432">IsBlocking</link>())&#32;{
<anchor xml:id="__player_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a57850da38e07a680af71543a3e02de1a">LastAttack</link>&#32;=&#32;0;
<anchor xml:id="__player_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Velocity.Y&#32;&lt;&#32;0)&#32;{
<anchor xml:id="__player_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">AnimationPlayer</link>.Play(<emphasis role="stringliteral">&quot;jump&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Velocity.Y&#32;&gt;&#32;0)&#32;{
<anchor xml:id="__player_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_player_1a343fb1371365e58eb9c641928d41237a">AnimationPlayer</link>.Play(<emphasis role="stringliteral">&quot;fall&quot;</emphasis>);
<anchor xml:id="__player_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;}
<anchor xml:id="__player_8cs_source_1l00460"/>00460 }
</programlisting></section>
